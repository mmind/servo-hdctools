<?xml version="1.0"?>
<root>
  <include>
    <name>common.xml</name>
  </include>
  <!-- STM32 UART -->
  <control>
    <name>ec_uart_capture</name>
    <doc>ec_uart_capture</doc>
    <params subtype="uart_capture" interface="3" drv="uart"
    map="onoff"></params>
  </control>
  <control>
    <name>ec_uart_cmd</name>
    <doc>Set to send command to EC UART. Get to obtain the matched
    results with the regular expression of ec_uart_regexp.</doc>
    <params subtype="uart_cmd" interface="3" drv="ec"
    input_type="str"></params>
  </control>
  <control>
    <name>ec_uart_multicmd</name>
    <doc>Set to send multiple commands to EC UART.</doc>
    <params subtype="uart_multicmd" interface="3" drv="ec"
    input_type="str" cmd="set"></params>
  </control>
  <control>
    <name>ec_uart_regexp</name>
    <doc>List of regular expressions which matches the response of
    ec_uart_cmd.</doc>
    <params subtype="uart_regexp" interface="3" drv="ec"
    input_type="str"></params>
  </control>
  <control>
    <name>ec_uart_stream</name>
    <doc>Ec uart stream collected while ec_uart_capture is set to
    'on'</doc>
    <params cmd="get" subtype="uart_stream" interface="3"
    drv="uart"></params>
  </control>
  <control>
    <name>ec_uart_timeout</name>
    <doc>Timeout value for waiting EC UART response of issuing an
    EC command.</doc>
    <params subtype="uart_timeout" interface="3" drv="ec"
    input_type="float"></params>
  </control>
  <control>
    <name>raw_ec_uart_pty</name>
    <doc>Pseudo-terminal (pty) thats connected to uart
    console</doc>
    <params cmd="get" interface="2" subtype="pty" drv="uart">
    </params>
  </control>
  <control>
    <name>ec3po_ec_console</name>
    <alias>ec_uart_pty</alias>
    <doc>EC UART console provided via EC-3PO console interpreter.</doc>
    <params cmd="get" subtype="pty" interface="3" drv="uart"></params>
  </control>
  <control>
    <name>ec_uart_baudrate</name>
    <doc>Baudrate for CPU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="baudrate"
    interface="2"></params>
  </control>
  <control>
    <name>ec_uart_parity</name>
    <doc>Parity for CPU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="parity"
    interface="2" map="uart_parity"></params>
  </control>
  <control>
    <name>ec_uart_sbits</name>
    <doc>Number of stop bits for CPU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="sbits"
    interface="2" map="uart_sbits"></params>
  </control>
  <control>
    <name>ec_uart_bits</name>
    <doc>Number of data bits for CPU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="bits"
    interface="2" map="uart_bits"></params>
  </control>
  <!-- GPIOS -->
  <control>
    <name>prog_en</name>
    <doc>Enable boot_mode and cold_reset GPIOs</doc>
    <params interface="1" drv="gpio" offset="0" map="yesno_i"
    init="no"></params>
  </control>
  <!-- CBUS1 is no connect -->
  <control>
    <name>boot_mode</name>
    <doc>EC monitor mode gpio</doc>
    <params interface="1" drv="gpio" offset="2" map="yesno"
    init="no"></params>
  </control>
  <control>
    <name>cold_reset</name>
    <doc>STM32 reset line</doc>
    <params interface="1" drv="gpio" offset="3" map="onoff"
    init="off"></params>
  </control>
  <!-- USB-C control -->
  <map>
    <name>pdrole</name>
    <doc>map for USB-PD port role</doc>
    <params sink="0" src5v="1" src12v="2" src20v="3"></params>
  </map>
  <map>
    <name>usbcmux</name>
    <doc>map for USB-C port mux</doc>
    <params usb="0" dp="1"></params>
  </map>
  <map>
    <name>polarity</name>
    <doc>map for USB-C polarity</doc>
    <params cc1="0" cc2="1"></params>
  </map>
  <control>
    <name>usbc_role</name>
    <doc>USB-PD port role</doc>
    <params interface="3" drv="plankton" subtype="usbc_role"
    map="pdrole" init="src5v"></params>
  </control>
  <control>
    <name>usbc_mux</name>
    <doc>USB-C port mux</doc>
    <params interface="3" drv="plankton" subtype="usbc_mux"
    map="usbcmux"></params>
  </control>
  <control>
    <name>usbc_polarity</name>
    <doc>USB-C polarity</doc>
    <params interface="3" drv="plankton" subtype="usbc_polarity"
    map="polarity"></params>
  </control>
  <!-- INA current sensing -->
  <control>
    <name>vbus_voltage</name>
    <doc>USB-C VBUS voltage in mV</doc>
    <params interface="3" drv="plankton" subtype="vbus_voltage">
    </params>
  </control>
  <control>
    <name>vbus_current</name>
    <doc>USB-C VBUS current in mA</doc>
    <params interface="3" drv="plankton" subtype="vbus_current">
    </params>
  </control>
  <control>
    <name>vbus_power</name>
    <doc>USB-C VBUS power in mW</doc>
    <params interface="3" drv="plankton" subtype="vbus_power">
    </params>
  </control>
  <!-- PD state -->
  <control>
    <name>pd_enable</name>
    <doc>Plankton PD enable</doc>
    <params interface="3" drv="plankton" subtype="pd_enable">
    </params>
  </control>
  <control>
    <name>pd_role</name>
    <doc>Plankton PD role</doc>
    <params interface="3" drv="plankton" subtype="pd_role">
    </params>
  </control>
  <control>
    <name>pd_polarity</name>
    <doc>Plankton PD polarity</doc>
    <params interface="3" drv="plankton" subtype="pd_polarity">
    </params>
  </control>
  <control>
    <name>pd_flags</name>
    <doc>Plankton PD flags</doc>
    <params interface="3" drv="plankton" subtype="pd_flags">
    </params>
  </control>
  <control>
    <name>pd_state</name>
    <doc>Plankton PD state string</doc>
    <params interface="3" drv="plankton" subtype="pd_state">
    </params>
  </control>
  <!-- IO expander -->
  <control>
    <name>io_expander_input</name>
    <doc>IO expander reg 0: input</doc>
    <params interface="3" drv="plankton"
    subtype="io_expander_input"></params>
  </control>
  <control>
    <name>io_expander_output</name>
    <doc>IO expander reg 1: output</doc>
    <params interface="3" drv="plankton"
    subtype="io_expander_output"></params>
  </control>
  <control>
    <name>io_expander_mask</name>
    <doc>IO expander reg 3: input mask</doc>
    <params interface="3" drv="plankton"
    subtype="io_expander_mask"></params>
  </control>
  <control>
    <name>usb_dn_pwren</name>
    <doc>Plankton USB hub power</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="0" map="onoff"></params>
  </control>
  <control>
    <name>redriver_rst</name>
    <doc>Plankton DP redriver reset</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="1" map="onoff"></params>
  </control>
  <control>
    <name>expander_access</name>
    <doc>Plankton IO expander access</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="2"></params>
  </control>
  <control>
    <name>usb3microb_det</name>
    <doc>CN5 USB3 micro-B power</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="3"></params>
  </control>
  <control>
    <name>usb2_mux_sw</name>
    <doc>USB2 switch</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="4"></params>
  </control>
  <control>
    <name>debug_usb_sel</name>
    <doc>Debugging FTDI USB switch</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="5"></params>
  </control>
  <control>
    <name>typec_to_hub_sw</name>
    <doc>USB-C to hub switch</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="6"></params>
  </control>
  <control>
    <name>usbhub_rst</name>
    <doc>Plankton USB hub reset</doc>
    <params interface="3" drv="plankton" subtype="expander_gpio"
    offset="7" map="onoff_i"></params>
  </control>
</root>
