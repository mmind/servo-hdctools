<root>
  <!-- USB PD UART Controls -->
  <control>
    <name>raw_usbpd_uart_pty</name>
    <doc>Psuedo-terminal (pty) thats connnected to USB PD MCU's
    uart console</doc>
    <params cmd="get" subtype="pty" interface="6" drv="uart">
    </params>
  </control>
  <!-- EC-3PO console interpreter for USB PD -->
  <control>
    <name>ec3po_usbpd_uart_pty</name>
    <alias>usbpd_uart_pty</alias>
    <doc>USBPD UART console provided via EC-3PO console interpreter.</doc>
    <params cmd="get" subtype="pty" interface="9" drv="uart"></params>
  </control>
  <control>
    <name>usbpd_ec3po_interp_connect</name>
    <doc>State indicating if interpreter is listening to the EC UART.</doc>
    <params interface="9" drv="ec3po_driver" map="onoff" init="on"
    subtype="interp_connect"></params>
  </control>
  <control>
    <name>usbpd_uart_baudrate</name>
    <doc>Baudrate for USB PD MCU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="baudrate"
    interface="6"></params>
  </control>
  <control>
    <name>usbpd_uart_parity</name>
    <doc>Parity for USB PD MCU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="parity"
    interface="6" map="uart_parity"></params>
  </control>
  <control>
    <name>usbpd_uart_sbits</name>
    <doc>Number of stop bits for USB PD MCU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="sbits"
    interface="6" map="uart_sbits"></params>
  </control>
  <control>
    <name>usbpd_uart_bits</name>
    <doc>Number of data bits for USB PD MCU's uart console</doc>
    <params drv="uart" subtype="props" line_prop="bits"
    interface="6" map="uart_bits"></params>
  </control>
  <!-- USB PD UART Automation Controls -->
  <control>
    <name>usbpd_uart_cmd</name>
    <doc>Set to send command to USBPD UART. Get to obtain the
    matched results with the regular expression of
    usbpd_uart_regexp.</doc>
    <params subtype="uart_cmd" interface="9" drv="uart"
    input_type="str"></params>
  </control>
  <control>
    <name>usbpd_uart_multicmd</name>
    <doc>Set to send multiple commands to USB PD UART.</doc>
    <params subtype="uart_multicmd" interface="9" drv="uart"
    input_type="str" cmd="set"></params>
  </control>
  <control>
    <name>usbpd_uart_regexp</name>
    <doc>List of regular expressions to match the response of
    usbpd_uart_cmd.</doc>
    <params subtype="uart_regexp" interface="9" drv="uart"
    input_type="str"></params>
  </control>
  <control>
    <name>usbpd_uart_timeout</name>
    <doc>Timeout value for a response after issuing a command on
    usbpd_uart_cmd.</doc>
    <params subtype="uart_timeout" interface="9" drv="uart"
    input_type="float"></params>
  </control>
  <control>
    <name>usbpd_uart_capture</name>
    <doc>Enables capture of USB PD console via
    usbpd_uart_stream</doc>
    <params subtype="uart_capture" interface="9" drv="uart"
    map="onoff"></params>
  </control>
  <control>
    <name>usbpd_uart_stream</name>
    <doc>USB PD console stream captured while usbpd_uart_capture is
    set to 'on'</doc>
    <params cmd="get" subtype="uart_stream" interface="9"
    drv="uart"></params>
  </control>
  <!-- USB PD UART Buffers & VREF Controls -->
  <control>
    <name>spi1_vref</name>
    <alias>usbpd_uart_vref</alias>
    <params clobber_ok="" init="pp3300"></params>
  </control>
  <control>
    <name>spi1_buf_en</name>
    <alias>usbpd_uart_en</alias>
    <params clobber_ok="" init="on"></params>
  </control>
  <control>
    <name>spi1_buf_on_flex_en</name>
    <alias>usbpd_uart_buf_on_flex_en</alias>
    <params clobber_ok="" init="on"></params>
  </control>
  <!-- Override from definition in servo_v2_r0.xml -->
  <control>
    <name>dev_mode</name>
    <alias>usbpd_boot_mode</alias>
    <params clobber_ok="" od="PP"></params>
  </control>
  <control>
    <name>pch_disable</name>
    <alias>usbpd_reset</alias>
    <params clobber_ok=""></params>
  </control>
</root>
